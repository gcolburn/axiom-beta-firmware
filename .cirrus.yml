docker_builder:
  only_if: $CIRRUS_TAG !=~ "nightly/.*"
  env:
    TOKEN: ENCRYPTED[475dccbf786af8c4c8bcedfdf7c507e9686192569f3be0c1d4dff35c6b6b1e36fedc29d489c75a75af515c84bd3c34ac]
    matrix:
      DEVICE: beta
      DEVICE: micro
  clone_script: >
    if [[ -z "$CIRRUS_PR" ]]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  make_script: ./makefiles/docker-make.sh DEVICE=$DEVICE
  test_script: ./makefiles/docker-make.sh DEVICE=$DEVICE test
  release_script: >
    if [ $CIRRUS_BRANCH = 'master' ]; then
      # compress the image
      xz -T $(nproc) build/axiom.img
      # get the github-release tool
      wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2
      tar -xf linux-amd64-github-release.tar.bz2
      # create the release and upload the compressed image
      ./bin/linux/amd64/github-release release -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME -t "nightly/$(git describe --always --abbrev=8)" -s $TOKEN -n "Unstable Development Snapshot $(./bin/linux/amd64/github-release info -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME | grep "Build on" | wc -l)" -c $CIRRUS_CHANGE_IN_REPO --pre-release -d " \
      A development snapshot of the axiom firmware.
      Build on $(date) for commit $(git describe --always --abbrev=8).

      \`\`\`diff
      - Warning! The nightly images are not veryfied by a human and might damage your camera permanently. 
      - Only continue, if you know, what you are doing!
      \`\`\`
      " || true
      ./bin/linux/amd64/github-release upload -u $CIRRUS_REPO_OWNER -r $CIRRUS_REPO_NAME -t "nightly/$(git describe --always --abbrev=8)" -s $TOKEN -n "axiom-$DEVICE-$(git describe --always --abbrev=8).img.xz" -f build/axiom.img.xz
    else
      echo "not on master branch; skipping deploy..."
    fi 
